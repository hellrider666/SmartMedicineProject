// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartMedicineProject.Models;

namespace SmartMedicineProject.Migrations
{
    [DbContext(typeof(SMAppContext))]
    partial class SMAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartMedicineProject.Models.AnalysisModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("analysisModels");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.DoctorFullInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("DateBorn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoctorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Exp")
                        .HasColumnType("int");

                    b.Property<string>("PassportSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIN_passport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DoctorUserId");

                    b.ToTable("doctorFullInfos");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.DoctorUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleModelId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleModelId");

                    b.ToTable("doctorUsers");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.PacientMedCart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("DateBorn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecordModelId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RecordModelId");

                    b.ToTable("pacientMedCarts");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.PacientsAnalysis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnalysisDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnalysisModelId")
                        .HasColumnType("int");

                    b.Property<int>("RecordModelID")
                        .HasColumnType("int");

                    b.Property<bool>("Result")
                        .HasColumnType("bit");

                    b.Property<string>("ResultInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AnalysisModelId");

                    b.HasIndex("RecordModelID");

                    b.ToTable("pacientsAnalyses");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.RecordModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoctorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DoctorUserId");

                    b.ToTable("recordModels");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roleModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Doctor"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Undefined"
                        });
                });

            modelBuilder.Entity("SmartMedicineProject.Models.DoctorFullInfo", b =>
                {
                    b.HasOne("SmartMedicineProject.Models.DoctorUser", "doctorUser")
                        .WithMany("doctorFullInfos")
                        .HasForeignKey("DoctorUserId");

                    b.Navigation("doctorUser");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.DoctorUser", b =>
                {
                    b.HasOne("SmartMedicineProject.Models.RoleModel", "RoleModel")
                        .WithMany("doctorUsers")
                        .HasForeignKey("RoleModelId");

                    b.Navigation("RoleModel");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.PacientMedCart", b =>
                {
                    b.HasOne("SmartMedicineProject.Models.RecordModel", "RecordModel")
                        .WithMany("pacientMedCarts")
                        .HasForeignKey("RecordModelId");

                    b.Navigation("RecordModel");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.PacientsAnalysis", b =>
                {
                    b.HasOne("SmartMedicineProject.Models.AnalysisModel", "AnalysisModel")
                        .WithMany("pacientsAnalyses")
                        .HasForeignKey("AnalysisModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartMedicineProject.Models.RecordModel", "RecordModel")
                        .WithMany("pacientsAnalyses")
                        .HasForeignKey("RecordModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnalysisModel");

                    b.Navigation("RecordModel");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.RecordModel", b =>
                {
                    b.HasOne("SmartMedicineProject.Models.DoctorUser", "DoctorUser")
                        .WithMany("recordModels")
                        .HasForeignKey("DoctorUserId");

                    b.Navigation("DoctorUser");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.AnalysisModel", b =>
                {
                    b.Navigation("pacientsAnalyses");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.DoctorUser", b =>
                {
                    b.Navigation("doctorFullInfos");

                    b.Navigation("recordModels");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.RecordModel", b =>
                {
                    b.Navigation("pacientMedCarts");

                    b.Navigation("pacientsAnalyses");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.RoleModel", b =>
                {
                    b.Navigation("doctorUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
