// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartMedicineProject.Models;

namespace SmartMedicineProject.Migrations
{
    [DbContext(typeof(SMAppContext))]
    [Migration("20220408091306_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartMedicineProject.Models.DoctorFullInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("DoctorUserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DoctorUserId");

                    b.ToTable("doctorFullInfos");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.DoctorUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleModelId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleModelId");

                    b.ToTable("doctorUsers");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roleModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("SmartMedicineProject.Models.DoctorFullInfo", b =>
                {
                    b.HasOne("SmartMedicineProject.Models.DoctorUser", "doctorUser")
                        .WithMany("doctorFullInfos")
                        .HasForeignKey("DoctorUserId");

                    b.Navigation("doctorUser");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.DoctorUser", b =>
                {
                    b.HasOne("SmartMedicineProject.Models.RoleModel", "RoleModel")
                        .WithMany("doctorUsers")
                        .HasForeignKey("RoleModelId");

                    b.Navigation("RoleModel");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.DoctorUser", b =>
                {
                    b.Navigation("doctorFullInfos");
                });

            modelBuilder.Entity("SmartMedicineProject.Models.RoleModel", b =>
                {
                    b.Navigation("doctorUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
